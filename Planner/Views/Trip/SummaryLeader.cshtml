@model Planner.ViewModels.TripViewModel

@using Microsoft.AspNetCore.Http;

@{
    ViewData["Title"] = "SummaryLeader";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section Scripts
{
    <script>
    function OnClick() {
        var Url = document.getElementById("inviteLink");
        navigator.clipboard.writeText(Url.innerHTML)
        alert("Copied the link: " + Url.innerHTML);
    }
    </script>
}

<div>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Name)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Name)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Days)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Days)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.StartDate)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.StartDate)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.WeatherLabel)
        </dt>
        <dd class="col-sm-9">
            <img src="@Model.IconUrl" width="50" height="50" />
            @Html.DisplayFor(model => model.WeatherLabel)
        </dd>
        <dd class="col-sm-1">
            <a href="@Model.WeatherLink">Link</a>
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.PeakName)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.PeakName)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.OwnerName)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.OwnerName)
        </dd>
    </dl>
    <br />

    <h2>Emergency contact</h2>
    <div class="row">
        <table class="table">
            <tr>
                <th>Name</th>
                <th>Phone</th>
                <th>Emergency contact name</th>
                <th>Emergency contact phone</th>
            </tr>
            @foreach (var hiker in @Model.Hikers)
            {
                <tr>
                    <td>@hiker.Hiker.FullName</td>
                    <td>@hiker.Hiker.Phone</td>
                    <td>@hiker.Hiker.EmergencyContactName</td>
                    <td>@hiker.Hiker.EmergencyContactPhone</td>
                </tr>
            }
        </table>
    </div>
    <br />

    <h2>Carpool</h4>
    <dl class="row">
        <dt class="col-sm-6">
            @Html.DisplayNameFor(model => model.MeetingTime)
        </dt>
        <dd class="col-sm-6">
            @Html.DisplayFor(model => model.MeetingTime)
        </dd>
        <dt class="col-sm-6">
            @Html.DisplayNameFor(model => model.MeetingLocation)
        </dt>
        <dd class="col-sm-6">
            @Html.DisplayFor(model => model.MeetingLocation)
        </dd>
    </dl>
    <h3>Drivers</h3>
    <div class="row">
        <table class="table">
            <tr>
                <th>Name</th>
                <th>Car brand</th>
                <th>Car Model</th>
                <th>Number of spots</th>
            </tr>
            @foreach (var hiker in @Model.Hikers.Where(h => h.Hiker.HasCar))
            {
                <tr>
                    <td>@hiker.Hiker.FullName</td>
                    <td>@hiker.Hiker.CarBrand</td>
                    <td>@hiker.Hiker.CarModel</td>
                    <td>@hiker.Hiker.Spaces</td>
                </tr>
            }
        </table>
    </div>
    <br />
    <h3>Need a ride</h3>
    <div class="row">
        @if(Model.MembersNeedingRide.Count() > 0)
        {
            <table class="table">
                <th>Name</th>
                @foreach (var hiker in @Model.Hikers.Where(h => !h.Hiker.HasCar))
                {
                    <tr>
                        <td>@hiker.Hiker.FullName</td>
                    </tr>
                }
            </table>
            } else
            {
                <p>No one needs a ride.</p>
            }
    </div>
    <br />

    <h2>Personal gear</h2>
    <div>
        <p>10 essentials</p>
        <ul>
            <li>Map, compass</li>
            <li>Headlamp with extra batteries</li>
            <li>Sunglasses, sunscreen, chapstick</li>
            <li>First aid kit</li>
            <li>Repair kit</li>
            <li>Matches or lighter</li>
            <li>Emergency bivy</li>
            <li>Food</li>
            <li>Water</li>
            <li>Clothing</li>
        </ul>
        @if (Model.RiverCrossing)
        {
            <p>River crossing</p>
            <ul>
                <li>Sandals</li>
                <li>Poles</li>
            </ul>
        }
        @if (Model.Glacier)
        {
            <p>Glacier</p>
            <ul>
                <li>Crampons</li>
                <li>Ice ax</li>
                <li>Helmet</li>
                <li>Crevasse rescue kit</li>
                <li>Harness</li>
            </ul>
        }
        @if (Model.RockClimb)
        {
            <p>Rock climb</p>
            <ul>
                <li>Belay device</li>
                <li>Belay gloves</li>
                <li>Prusik</li>
                <li>Webbing</li>
                <li>Personal anchor</li>
                @if(Model.Glacier == false)
                {
                    <li>Helmet</li>
                    <li>Harness</li>   
                }
            </ul>
        }
        @if (Model.Overnight)
        {
            <p>Overnight</p>
            <ul>
                <li>Sleeping bag</li>
                <li>Sleeping pad</li>
                <li>Blue bag</li>
            </ul>
        }
        @if (Model.PotentialAvalanche)
        {
            <p>Potential avalance</p>
            <ul>
                <li>Avalanche beacon</li>
                <li>Shovel</li>
                <li>Probe</li>
            </ul>
        }
    </div>
</div>

<hr />

<div>
    <a asp-action="Index">Back to List</a>
</div>
